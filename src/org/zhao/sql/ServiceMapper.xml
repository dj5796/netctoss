<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="org.zhao.dao.ServiceDao">

	<select id="findByPage" parameterType="org.zhao.entity.page.Page" resultType="hashMap">
		select * from (
			select a.*,ROWNUM as num from (
				select 
					s.*,
					a.idcard_no,
					a.real_name,
					c.name as cost_name,
					c.descr
				from service s
				inner join account a on a.account_id=s.account_id
				inner join cost c on c.cost_id=s.cost_id
				<where>
					<if test="os_username!=null &amp;&amp; os_username.length()>0">
						and s.os_username like '%'||#{os_username}||'%'
					</if>
					<if test="unix_host!=null &amp;&amp; unix_host.length()>0">
						and s.unix_host like '%'||#{unix_host}||'%'
					</if>
					<if test="idcard_no!=null &amp;&amp; idcard_no.length()>0">
						and a.idcard_no like '%'||#{idcard_no}||'%'
					</if>
					<if test='status!=null &amp;&amp; !status.equals("-1")'>
						and s.status=#{status}
					</if>
				</where>
				order by s.service_id
			) a
		) where num &lt; #{end} and num &gt; #{begin}
	</select>
	
	<select id="findRows" parameterType="org.zhao.entity.page.Page" resultType="int">
		select count(*) from service s
		inner join account a on a.account_id=s.account_id
		inner join cost c on c.cost_id=s.cost_id
		<where>
			<if test="os_username!=null &amp;&amp; os_username.length()>0">
				and s.os_username like '%'||#{os_username}||'%'
			</if>
			<if test="unix_host!=null &amp;&amp; unix_host.length()>0">
				and s.unix_host like '%'||#{unix_host}||'%'
			</if>
			<if test="idcard_no!=null &amp;&amp; idcard_no.length()>0">
				and a.idcard_no like '%'||#{idcard_no}||'%'
			</if>
			<if test='status!=null &amp;&amp; !status.equals("-1")'>
				and s.status=#{status}
			</if>
		</where>
	</select>	
	
	<update id="updateStatus" parameterType="org.zhao.entity.Service">
		update service s set s.status=#{status},
		<choose>
			<when test="status==0">
				s.pause_date=null
			</when>
			<when test="status==1">
				s.pause_date=sysdate
			</when>
			<otherwise>
				s.close_date=sysdate
			</otherwise>
		</choose>
		where s.service_id=#{service_id}
	</update>	
	
	<update id="pauseByAccount" parameterType="int">
		update service set status='1',pause_date=SYSDATE
		where account_id=#{accountId}
	</update>
	
	<update id="deleteByAccount" parameterType="int">
		update service set status='2',close_date=SYSDATE
		where account_id=#{accountId}
	</update>
	
	<select id="findById" parameterType="int" resultType="org.zhao.entity.Service">
		select * from service where service_id=#{id}
	</select>
	
	<select id="getServiceDetailInfo" parameterType="int" resultType="hashMap">
		select
		  s.service_id  as "service_id",
		  s.account_id  as "account_id",
		  a.real_name   as "real_name",
		  a.idcard_no   as "idcard_no",
		  s.unix_host   as "unix_host",
		  s.os_username as "os_username",
		  s.status      as "status",
		  s.create_date as "create_date",
		  s.pause_date  as "pause_date",
		  s.close_date  as "close_date",
		  s.cost_id     as "cost_id",
		  c.name        as "name",
		  c.descr       as "descr"
		from service s
		left join account a on a.account_id=s.account_id
		left join cost c on c.cost_id=s.cost_id
		where s.service_id=#{serviceId}
	</select>
	
	<insert id="save" parameterType="org.zhao.entity.Service">
		insert into service values(
			service_seq.nextval,
			#{account_id,jdbcType=NUMERIC},
			#{unix_host,jdbcType=VARCHAR},
			#{os_username,jdbcType=VARCHAR},
			#{login_passwd,jdbcType=VARCHAR},
			#{status,jdbcType=VARCHAR},
			#{create_date,jdbcType=TIMESTAMP},
			#{pause_date,jdbcType=TIMESTAMP},
			#{close_date,jdbcType=TIMESTAMP},
			#{cost_id,jdbcType=NUMERIC}
		)
	</insert>
	
	<select id="findFromBak" parameterType="int" resultType="org.zhao.entity.Service">
		select * from service_update_bak where service_id=#{id}
	</select>
	
	<insert id="updateToAdd" parameterType="org.zhao.entity.Service">
		insert into service_update_bak values(
			service_update_bak_seq.nextval,
			#{service_id,jdbcType=NUMERIC},
			#{cost_id,jdbcType=NUMERIC}
		)
	</insert>
	
	<update id="updateCostId" parameterType="org.zhao.entity.Service">
		update service_update_bak s set 
		s.cost_id=#{cost_id}
		where s.service_id=#{service_id}
	</update>
	
	<update id="updateServiceCostType" parameterType="org.zhao.entity.Service">
		update service s set 
		s.cost_id=#{cost_id}
		where s.service_id=#{service_id}
	</update>
	
	<select id="findOS_UsernameByIP" parameterType="string" resultType="string">
		select s.os_username from service s where s.unix_host=#{ip}
	</select>
	
	<update id="clearServiceUpdateBak">
		delete from service_update_bak
	</update>
	
</mapper>