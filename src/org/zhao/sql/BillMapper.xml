<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="org.zhao.dao.BillDao">
	<update id="calculateMonthDuration" parameterType="string">
		update service_detail d 
		set d.duration=round(to_number(d.logout_time-d.login_time)*24*60*60)
		where d.login_time &gt; to_date(#{billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss')
		and d.login_time &lt; add_months(to_date(#{billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss'),+1) 
	</update>
	
	<select id="findBillServiceCostInfo" parameterType="string" resultType="map">
		select
			b.id             as "bill_id",
		  	s.service_id 	 as "service_id",
		  	c.cost_id 		 as "cost_id",
		  	c.cost_type 	 as "cost_type",
		  	c.base_duration  as "base_duration",
		  	c.base_cost 	 as "base_cost",
		  	c.unit_cost 	 as "unit_cost"
		from service s
		left join cost c on c.cost_id=s.cost_id
		left join account a on a.account_id=s.account_id
		left join bill b on b.account_id=a.account_id
		where s.status='0' and trim(b.bill_month)=#{billYearMonth}
		order by b.id,s.service_id
	</select>

	<select id="findServiceDetailByBillMonth" resultType="org.zhao.entity.ServiceDetail">
		select d.* from service_detail d
		left join service s on s.service_id=d.service_id
		left join cost c on c.cost_id=s.cost_id
		where d.service_id=#{service_id}
		and d.login_time &gt; to_date(#{billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss')
		and d.login_time &lt; add_months(to_date(#{billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss'),+1) 
		order by d.id
	</select>
	
	<update id="calculateCostAndDuration" parameterType="java.util.List">
	    <foreach collection="list" item="ServiceDetail" index="index" open="begin" close=";end;" separator=";">
	    	update service_detail d 
	    	set 
	    		d.cost=#{ServiceDetail.cost},
	    		d.duration_str=#{ServiceDetail.duration_str}
	    	where d.id=#{ServiceDetail.id}
	    </foreach>
    </update>
	
	<select id="findUsingServiceAccounts" resultType="org.zhao.entity.Account">
		select * from account a
		where a.status='0' and a.account_id in(
		      select distinct(s.account_id) 
		      from service s where s.status='0'
		)
		order by a.account_id
	</select>
	
	<insert id="batchAddBills" parameterType="list">
		<foreach collection="list" item="bill" index="index" open="begin" close=";end;" separator=";">
			insert into bill values(
				 bill_seq.nextval,
				 #{bill.account_id,jdbcType=INTEGER},
				 #{bill.bill_month,jdbcType=VARCHAR},
				 #{bill.cost,jdbcType=DOUBLE},
				 #{bill.payment_mode,jdbcType=VARCHAR},
				 #{bill.pay_state,jdbcType=VARCHAR},
				 #{bill.sofar_duration_str,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	
	<select id="getBillItemInfoToCal" resultType="org.zhao.entity.BillItem">
		select
		  b.id  as bill_id,
		  d.service_id,
		  c.cost_id,
		  d.cost,
		  b.bill_month as month_id,
		  d.duration as sofar_duration
		from service_detail d
		left join service s on s.service_id=d.service_id
		left join cost c on c.cost_id=s.cost_id
		left join bill b on b.account_id=s.account_id
		where d.service_id=#{serviceId}
		and d.login_time &gt; to_date(#{billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss')
		and d.login_time &lt; add_months(to_date(#{billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss'),+1) 
		and to_date(b.bill_month,'yyyy-MM') &gt; add_months(to_date(#{billYearMonth},'yyyy-MM'),-1)
		and to_date(b.bill_month,'yyyy-MM') &lt; add_months(to_date(#{billYearMonth},'yyyy-MM'),+1)
	</select>
	
	<insert id="batchAddBillItems" parameterType="list">
		<foreach collection="list" item="billItem" index="index" open="begin" close=";end;" separator=";">
			insert into bill_item values(
				 bill_item_seq.nextval,
				 #{billItem.bill_id,jdbcType=INTEGER},
				 #{billItem.service_id,jdbcType=INTEGER},
				 #{billItem.cost_id,jdbcType=INTEGER},
				 #{billItem.cost,jdbcType=DOUBLE},
				 #{billItem.month_id,jdbcType=VARCHAR},
				 #{billItem.sofar_duration,jdbcType=BIGINT},
				 #{billItem.sofar_duration_str,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	
	<select id="findBillIdsByMonth" parameterType="string" resultType="int">
		select b.id from bill b 
		where to_date(b.bill_month,'yyyy-MM') &gt; add_months(to_date(#{billYearMonth},'yyyy-MM'),-1)
		and to_date(b.bill_month,'yyyy-MM') &lt; add_months(to_date(#{billYearMonth},'yyyy-MM'),+1)
	</select>
	
	<select id="findBillItemsByBillId" parameterType="int" resultType="org.zhao.entity.BillItem">
		select * from bill_item i where i.bill_id=#{billId}
	</select>
	
	<update id="batchUpdateBills" parameterType="list">
		<foreach collection="list" item="bill" index="index" open="begin" close=";end;" separator=";">
	    	update bill b 
			set 
				b.cost=#{bill.cost},
				b.sofar_duration_str=#{bill.sofar_duration_str}
			where b.id=#{bill.id}
		</foreach>
	</update>
	
	<select id="findAllServiceUpdateBak" resultType="org.zhao.entity.ServiceUpdateBak">
		select * from service_update_bak u
	</select>
	
	<select id="getDurationRankInfoToCal" parameterType="string" resultType="org.zhao.entity.DurationRank">
		select
		  a.account_id,
		  a.real_name,
		  a.login_name,
		  a.idcard_no,
		  h.host_id,
		  h.unix_host,
		  i.sofar_duration,
		  i.sofar_duration_str
		from bill_item i
		left join service s on s.service_id=i.service_id
		left join account a on a.account_id=s.account_id
		left join host h on trim(h.unix_host)=trim(s.unix_host)
		where to_date(i.month_id,'yyyy-MM') &gt; add_months(to_date(#{billYearMonth},'yyyy-MM'),-1)
		and to_date(i.month_id,'yyyy-MM') &lt; add_months(to_date(#{billYearMonth},'yyyy-MM'),+1)
		order by a.account_id
	</select>
	
	<select id="findDurationRankByAccountIdHostId" resultType="org.zhao.entity.DurationRank">
		select * from duration_rank d 
		where d.account_id=#{account_id} and d.host_id=#{host_id}
	</select>
	
	<insert id="addDurationRank" parameterType="org.zhao.entity.DurationRank">
		insert into duration_rank values(
			duration_rank_seq.nextval,
			#{account_id,jdbcType=INTEGER},
			#{host_id,jdbcType=INTEGER},
			#{sofar_duration,jdbcType=BIGINT},
			#{sofar_duration_str,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateDurationRank" parameterType="org.zhao.entity.DurationRank">
		update duration_rank d 
		set 
			d.sofar_duration=#{sofar_duration,jdbcType=BIGINT},
			d.sofar_duration_str=#{sofar_duration_str,jdbcType=VARCHAR}
		where d.id=#{id}
	</update>
	
	<!-- =============上面的方法用于计算生成账单,下面用于查询账单=============  -->
	
	<!-- 1.账单管理页面 -->
	<select id="findRowsFromBill" parameterType="org.zhao.entity.page.Page" resultType="int">
		select count(*) from bill b
		left join account a on a.account_id=b.account_id
		<where>
			<if test="real_name!=null &amp;&amp; real_name.length()>0">
				and a.real_name like '%'||#{real_name}||'%'
			</if>
			<if test="idcard_no!=null &amp;&amp; idcard_no.length()>0">
				and a.idcard_no like '%'||#{idcard_no}||'%'
			</if>
			<if test="login_name!=null &amp;&amp; login_name.length()>0">
				and a.login_name like '%'||#{login_name}||'%'
			</if>
			<choose>
				<when test='month!=null &amp;&amp; month!=0'>
					and to_date(b.bill_month,'yyyy-MM') &gt; add_months(to_date(#{billYearMonth},'yyyy-MM'),-1)
					and to_date(b.bill_month,'yyyy-MM') &lt; add_months(to_date(#{billYearMonth},'yyyy-MM'),+1)
				</when>
				<otherwise>
					and b.bill_month like '%'||#{year}||'%'
				</otherwise>
			</choose>
		</where>
	</select>
	
	<select id="findBillsByPage" parameterType="org.zhao.entity.page.Page" resultType="org.zhao.entity.Bill">
		select * from (
			select info.*,ROWNUM num from (
				select * from bill b
				left join account a on a.account_id=b.account_id
				<where>
					<if test="real_name!=null &amp;&amp; real_name.length()>0">
						and a.real_name like '%'||#{real_name}||'%'
					</if>
					<if test="idcard_no!=null &amp;&amp; idcard_no.length()>0">
						and a.idcard_no like '%'||#{idcard_no}||'%'
					</if>
					<if test="login_name!=null &amp;&amp; login_name.length()>0">
						and a.login_name like '%'||#{login_name}||'%'
					</if>
					<choose>
						<when test='month!=null &amp;&amp; month!=0'>
							and to_date(b.bill_month,'yyyy-MM') &gt; add_months(to_date(#{billYearMonth},'yyyy-MM'),-1)
							and to_date(b.bill_month,'yyyy-MM') &lt; add_months(to_date(#{billYearMonth},'yyyy-MM'),+1)
						</when>
						<otherwise>
							and b.bill_month like '%'||#{year}||'%'
						</otherwise>
					</choose>
				</where>
				order by b.id
			) info
		) where num &lt; #{end} and num &gt; #{begin}
	</select>
	
	<!-- 2.账单明细页面 -->
	<select id="findBillByBillId" parameterType="int" resultType="org.zhao.entity.Bill">
		select * from bill b
		left join account a on a.account_id=b.account_id
		where b.id=#{billId}
	</select>
	
	<select id="findRowsFromBillItem" parameterType="int" resultType="int">
		select count(*) from bill b
		left join bill_item i on i.bill_id=b.id
		where b.id=#{billId}
	</select>
	
	<!-- 根据账单id进行分页查找账单条目  -->
	<select id="findBillItemsByBillIdPage" parameterType="int" resultType="map">
		select * from (
			select info.*,rownum num from (
				select
				      i.id 					as "id",
				      b.id 					as "bill_id",
				      i.service_id 			as "service_id",
				      i.cost 				as "cost",
				      i.month_id 			as "month_id",
				      i.sofar_duration_str 	as "sofar_duration_str",
				      c.name  			 	as "cost_name",
				      b.account_id			as "account_id",
				      s.os_username			as "os_username",
				      s.unix_host			as "unix_host"
				from bill_item i
				left join bill b on i.bill_id=b.id
				left join service s on s.service_id=i.service_id
				left join cost c on c.cost_id=i.cost_id
				where b.id=#{billId}
				order by i.id
			) info
		) where num &lt; #{page.end} and num &gt; #{page.begin}
	</select>

	<!-- 3.账单详单界面 -->
	<select id="findBillItemByItemId" parameterType="int" resultType="map">
		select
		      i.id 					as "id",
		      b.id 					as "bill_id",
		      i.service_id 			as "service_id",
		      i.cost 				as "cost",
		      i.month_id 			as "month_id",
		      i.sofar_duration_str 	as "sofar_duration_str",
		      c.name 				as "cost_name",
		      b.account_id			as "account_id",
		      s.os_username			as "os_username",
		      s.unix_host			as "unix_host"
		from bill b 
		left join bill_item i on i.bill_id=b.id
		left join service s on s.service_id=i.service_id
		left join cost c on c.cost_id=i.cost_id
		where i.id=#{itemId}
	</select>
	
	<select id="findRowsFromServiceDetail" resultType="int">
		select count(*) from service_detail d
		left join bill_item i on d.service_id=i.service_id
		where i.id=#{itemId}
		and d.login_time &gt; to_date(#{page.billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss') 
		and d.login_time &lt; add_months(to_date(#{page.billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss'),+1)
	</select>
	
	<select id="findServiceDetailsByItemIdPage" resultType="org.zhao.entity.ServiceDetail">
		select * from (
			select info.*,ROWNUM num from (
				select 
					d.*,
					sum(d.cost) over(order by d.login_time) as sum_cost
				from service_detail d
				left join bill_item i on d.service_id=i.service_id
				where i.id=#{itemId}
					and d.login_time &gt; to_date(#{page.billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss') 
					and d.login_time &lt; add_months(to_date(#{page.billYearMonth}||'-1 00:00:00','yyyy-MM-dd hh24:mi:ss'),+1)
				order by d.login_time
			) info
		) where num &lt; #{page.end} and num &gt; #{page.begin}
	</select>
</mapper>